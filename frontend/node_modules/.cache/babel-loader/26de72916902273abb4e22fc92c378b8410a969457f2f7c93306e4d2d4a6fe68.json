{"ast":null,"code":"var _jsxFileName = \"/Users/gabriel/Downloads/Curtin - 2025 Semester 1/ISAD3001 Capstone Computing Project 2/Coding/social-listening-web-scrapper/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport PostList from './components/PostList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searched, setSearched] = useState(false);\n  const [searchMetadata, setSearchMetadata] = useState(null);\n  const searchReddit = async searchParams => {\n    console.log('Searching with params:', searchParams);\n    setLoading(true);\n    setError(null);\n    setSearched(true);\n    try {\n      // Convert search params to query string\n      const queryParams = new URLSearchParams({\n        keyword: searchParams.keyword,\n        subreddits: searchParams.subreddits,\n        timeframe: searchParams.timeframe,\n        sort: searchParams.sort,\n        includeNsfw: searchParams.includeNsfw\n      }).toString();\n      const response = await fetch(`http://localhost:9000/api/search?${queryParams}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch data from Reddit');\n      }\n      const data = await response.json();\n      setPosts(data.posts);\n      setSearchMetadata(data.metadata);\n    } catch (err) {\n      setError(err.message);\n      setPosts([]);\n      setSearchMetadata(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Reddit Social Listening\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Monitor Reddit posts for keywords of interest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: searchReddit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Searching Reddit...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), searchMetadata && !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-metadata\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Found \", searchMetadata.total, \" results\", searchMetadata.timeframe !== 'all' && ` from the past ${searchMetadata.timeframe}`, searchMetadata.sort !== 'relevance' && `, sorted by ${searchMetadata.sort}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"search-query\",\n          children: [\"Search query: \", searchMetadata.query]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), !loading && !error && searched && posts.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No posts found. Try different keywords or search options.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), !loading && !error && posts.length > 0 && /*#__PURE__*/_jsxDEV(PostList, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"app-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xA9 \", new Date().getFullYear(), \" Reddit Social Listening App\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Jo3nMumwNTZQKyVHkL9P8PdNqVI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchBar","PostList","jsxDEV","_jsxDEV","App","_s","posts","setPosts","loading","setLoading","error","setError","searched","setSearched","searchMetadata","setSearchMetadata","searchReddit","searchParams","console","log","queryParams","URLSearchParams","keyword","subreddits","timeframe","sort","includeNsfw","toString","response","fetch","ok","Error","data","json","metadata","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","total","query","length","Date","getFullYear","_c","$RefreshReg$"],"sources":["/Users/gabriel/Downloads/Curtin - 2025 Semester 1/ISAD3001 Capstone Computing Project 2/Coding/social-listening-web-scrapper/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport PostList from './components/PostList';\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searched, setSearched] = useState(false);\n  const [searchMetadata, setSearchMetadata] = useState(null);\n  \n  const searchReddit = async (searchParams) => {\n    console.log('Searching with params:', searchParams);\n    setLoading(true);\n    setError(null);\n    setSearched(true);\n    \n    try {\n      // Convert search params to query string\n      const queryParams = new URLSearchParams({\n        keyword: searchParams.keyword,\n        subreddits: searchParams.subreddits,\n        timeframe: searchParams.timeframe,\n        sort: searchParams.sort,\n        includeNsfw: searchParams.includeNsfw\n      }).toString();\n\n      const response = await fetch(`http://localhost:9000/api/search?${queryParams}`);\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch data from Reddit');\n      }\n      \n      const data = await response.json();\n      setPosts(data.posts);\n      setSearchMetadata(data.metadata);\n    } catch (err) {\n      setError(err.message);\n      setPosts([]);\n      setSearchMetadata(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <div className=\"container\">\n          <h1>Reddit Social Listening</h1>\n          <p>Monitor Reddit posts for keywords of interest</p>\n        </div>\n      </header>\n      \n      <main className=\"container\">\n        <SearchBar onSearch={searchReddit} />\n        \n        {loading && (\n          <div className=\"loading\">\n            <p>Searching Reddit...</p>\n          </div>\n        )}\n        \n        {error && (\n          <div className=\"error\">\n            <p>{error}</p>\n          </div>\n        )}\n        \n        {searchMetadata && !loading && !error && (\n          <div className=\"search-metadata\">\n            <p>\n              Found {searchMetadata.total} results \n              {searchMetadata.timeframe !== 'all' && ` from the past ${searchMetadata.timeframe}`}\n              {searchMetadata.sort !== 'relevance' && `, sorted by ${searchMetadata.sort}`}\n            </p>\n            <p className=\"search-query\">Search query: {searchMetadata.query}</p>\n          </div>\n        )}\n        \n        {!loading && !error && searched && posts.length === 0 && (\n          <div className=\"no-results\">\n            <p>No posts found. Try different keywords or search options.</p>\n          </div>\n        )}\n        \n        {!loading && !error && posts.length > 0 && (\n          <PostList posts={posts} />\n        )}\n      </main>\n      \n      <footer className=\"app-footer\">\n        <div className=\"container\">\n          <p>&copy; {new Date().getFullYear()} Reddit Social Listening App</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}